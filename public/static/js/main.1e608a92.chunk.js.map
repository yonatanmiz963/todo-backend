{"version":3,"sources":["services/http.service.js","services/todoService.js","store/actions/todoActions.js","cmps/TodoPreview/TodoPreview.jsx","cmps/TodoList/TodoList.jsx","cmps/TodoEdit/TodoEdit.jsx","cmps/TodoFilter/TodoFilter.jsx","pages/TodoApp/TodoApp.jsx","App.js","reportWebVitals.js","store/reducers/todoReducer.js","store/index.js","index.js"],"names":["BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","todoService","query","save","remove","id","todoToSave","_id","saveTodo","todo","dispatch","isAdd","savedTodo","type","updatedTodo","todoToEdit","TodoPreview","useDispatch","className","isDone","description","format","createdAt","title","onClick","todoId","removedTodo","icon","faTrashAlt","faEdit","faCheckCircle","faCircle","TodoList","todos","map","TodoEdit","selectedTodo","useSelector","state","todoReducer","useState","setTodoToEdit","useEffect","onAddTodo","ev","preventDefault","onSubmit","htmlFor","placeholder","required","value","onChange","target","field","name","prevState","faSave","TodoFilter","dates","searchStr","handleChange","defaultValue","label","date","idx","Date","toLocaleString","TodoApp","todosToDisplay","setTodosToDisplay","byDate","term","setTerm","filterDates","setFilterDates","filterTodos","filteredTodos","filter","toLowerCase","includes","filterBy","todosDates","Set","getTodosDates","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e608a92.chunk.js","sourcesContent":["import Axios from 'axios'\r\n// import {router} from '@/router'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    // console.log('data', data);\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            // Depends on routing startegy - hash or history\r\n            // window.location.assign('/#/login')\r\n            // window.location.assign('/login')\r\n            // router.push('/login')\r\n        }\r\n        throw err\r\n    }\r\n}","import { httpService } from './http.service'\r\n\r\nexport const todoService = {\r\n    query,\r\n    save,\r\n    remove,\r\n}\r\n\r\nasync function query() {\r\n    return httpService.get('todo/')\r\n}\r\n\r\nasync function remove(id) {\r\n    return httpService.delete(`todo/${id}`)\r\n}\r\n\r\nasync function save(todoToSave) {\r\n    if (!todoToSave._id) {\r\n        return httpService.post('todo/', todoToSave)\r\n    } else {\r\n        return httpService.put(`todo/edit/${todoToSave._id}`, todoToSave)\r\n    }\r\n}\r\n\r\n","import { todoService } from '../../services/todoService'\r\n\r\nexport function loadTodos(filterBy) {\r\n  return async dispatch => {\r\n    try {\r\n      const todos = await todoService.query(filterBy)\r\n      const action = {\r\n        type: 'SET_TODOS',\r\n        todos\r\n      }\r\n      dispatch(action)\r\n\r\n    } catch (error) {\r\n      console.log('error:', error)\r\n    }\r\n  }\r\n}\r\n\r\nexport function saveTodo(todo) {\r\n  return async dispatch => {\r\n    try {\r\n      const isAdd = !todo._id\r\n      const savedTodo = await todoService.save(todo)\r\n      if (isAdd) {\r\n        dispatch({ type: 'ADD_TODO', todo: savedTodo })\r\n\r\n      } else {\r\n        dispatch({ type: 'UPDATE_TODO', updatedTodo: savedTodo })\r\n        dispatch({ type: 'SET_EDIT_TODO', todoToEdit: null })\r\n      }\r\n      return savedTodo\r\n\r\n    } catch (err) {\r\n      console.log('err:', err)\r\n\r\n    }\r\n  }\r\n}\r\n\r\nexport function removeTodo(todoId) {\r\n  return async dispatch => {\r\n    try {\r\n      const removedTodo = await todoService.remove(todoId)\r\n      dispatch({ type: 'REMOVE_TODO', todoId })\r\n      return removedTodo\r\n\r\n    } catch (err) {\r\n      console.log('err:', err)\r\n\r\n    }\r\n  }\r\n}\r\n\r\nexport function setTodoToEdit(todoToEdit) {\r\n  return dispatch => {\r\n    dispatch({ type: 'SET_EDIT_TODO', todoToEdit })\r\n  }\r\n}\r\n","import './TodoPreview.scss'\nimport { useDispatch } from 'react-redux'\nimport { removeTodo, saveTodo, setTodoToEdit } from '../../store/actions/todoActions'\nimport Moment from 'react-moment';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt, faEdit, faCircle, faCheckCircle } from '@fortawesome/free-solid-svg-icons'\n\nexport const TodoPreview = ({ todo }) => {\n\n    const dispatch = useDispatch()\n\n    const onRemoveTodo = () => {\n        dispatch(removeTodo(todo._id))\n    }\n\n    const onEditTodo = () => {\n        dispatch(setTodoToEdit(todo))\n    }\n\n    const onToggleChecked = () => {\n        todo.isDone = !todo.isDone\n        dispatch(saveTodo(todo))\n    }\n\n    return (\n        <div className={todo.isDone ? 'todo-preview done' : 'todo-preview'} >\n            <div className=\"desc-wrapper\">\n                <p>{todo.description}</p>\n            </div>\n            <div className=\"createdAt-wrapper\">\n                <p><Moment format=\"LLLL\">{todo.createdAt}</Moment></p>\n            </div>\n            <div className=\"actions-wrapper\">\n                <button className=\"remove-btn\" title=\"Remove\" onClick={onRemoveTodo}><FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon></button>\n                <button className=\"edit-btn\" title=\"Edit\" onClick={onEditTodo}><FontAwesomeIcon icon={faEdit}></FontAwesomeIcon></button>\n                <button className=\"check-btn\" title=\"Check/Un-Check\" onClick={onToggleChecked}>{todo.isDone ?\n                    <FontAwesomeIcon icon={faCheckCircle}></FontAwesomeIcon> :\n                    <FontAwesomeIcon icon={faCircle}></FontAwesomeIcon>}</button>\n            </div>\n        </div>\n    )\n}\n","import { TodoPreview } from '../TodoPreview';\nimport './TodoList.scss'\n\n\nexport const TodoList = ({ todos }) => {\n    return (\n        <div className=\"todo-list\">\n            <div className=\"titles\">\n                <div className=\"desc-wrapper\">\n                    <h3>Description</h3>\n                </div>\n                <div className=\"createdAt-wrapper\">\n                    <h3>Created At</h3>\n                </div>\n                <div className=\"actions-wrapper\">\n                    <h3>Actions</h3>\n                </div>\n            </div>\n            {\n                todos && todos.map(todo => <TodoPreview key={todo._id} todo={todo} />)\n            }\n        </div>\n    )\n}\n","\n\nimport './TodoEdit.scss'\nimport { saveTodo } from '../../store/actions/todoActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useEffect, useState } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSave } from '@fortawesome/free-solid-svg-icons'\n\nexport const TodoEdit = () => {\n\n    const dispatch = useDispatch()\n    const selectedTodo = useSelector(state => state.todoReducer.todoToEdit)\n    const [todoToEdit, setTodoToEdit] = useState({ description: '' })\n\n\n    useEffect(() => {\n        if (selectedTodo) setTodoToEdit(selectedTodo)\n    }, [selectedTodo])\n\n    const onAddTodo = async (ev) => {\n        try {\n            ev.preventDefault()\n            await dispatch(saveTodo(todoToEdit))\n            setTodoToEdit({ description: '' })\n\n        } catch (err) {\n            console.log('err:', err)\n        }\n    }\n\n    const handleChange = ({ target }) => {\n        const field = target.name\n        const value = target.type === 'number' ? +target.value : target.value\n        setTodoToEdit((prevState) => ({ ...prevState, [field]: value }))\n    }\n\n    const { description } = todoToEdit\n    return (\n        <div className=\"todo-edit\">\n            <form className=\"add-form\" onSubmit={onAddTodo}>\n                <div className=\"add-wrapper\">\n                    <label htmlFor=\"description\">{selectedTodo ? 'Edit Todo: ' : 'Add Todo: '}</label>\n                    <input placeholder=\"What to do?\" required type=\"text\" id=\"description\" value={description} onChange={handleChange} name=\"description\" />\n                </div>\n                <button title=\"Save\" className=\"save-btn\"><FontAwesomeIcon icon={faSave}></FontAwesomeIcon></button>\n            </form>\n        </div>\n    )\n}\n\n","\n\nimport './TodoFilter.scss'\n\nexport const TodoFilter = ({ dates, searchStr, handleChange }) => {\n    return (\n        <div>\n            <form className=\"todo-filter\" onSubmit={(ev) => ev.preventDefault()}>\n                <div className=\"desc-wrapper\">\n                    <label htmlFor=\"search\">Search: </label>\n                    <input placeholder=\"By description\" type=\"text\" id=\"searchStr\" name=\"searchStr\" value={searchStr} onChange={handleChange} />\n                </div>\n                <div className=\"date-wrapper\">\n                    <label htmlFor=\"date\">By Date: </label>\n                    <select onChange={handleChange} defaultValue=\"\" type=\"number\" name=\"byDate\">\n                        <option value=\"\" label=\"All\"></option>\n                        {dates && dates.map((date, idx) => <option key={idx} value={date} label={new Date(date).toLocaleString()}></option>)}\n                    </select>\n                </div>\n            </form>\n        </div>\n    )\n}\n\n","\nimport './TodoApp.scss'\nimport { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { TodoList } from '../../cmps/TodoList'\nimport { loadTodos } from '../../store/actions/todoActions'\nimport { TodoEdit } from '../../cmps/TodoEdit/TodoEdit'\nimport { TodoFilter } from '../../cmps/TodoFilter/TodoFilter'\n\n\nexport const TodoApp = () => {\n\n  const dispatch = useDispatch()\n\n  const todos = useSelector(state => state.todoReducer.todos)\n\n  const [todosToDisplay, setTodosToDisplay] = useState([])\n  const [term, setTerm] = useState({ searchStr: '', byDate: '' })\n  const [filterDates, setFilterDates] = useState()\n\n  const filterTodos = () => {\n\n    var filteredTodos = [...todos]\n    if (term.searchStr) {\n      filteredTodos = filteredTodos.filter(todo => todo.description.toLowerCase().includes(term.searchStr.toLowerCase()))\n    }\n    if (term.byDate) {\n      filteredTodos = filteredTodos.filter(todo => todo.createdAt === +term.byDate)\n    }\n    filteredTodos ? setTodosToDisplay(filteredTodos) : setTodosToDisplay(todos)\n  }\n\n  const handleChange = ({ target }) => {\n    const field = target.name\n    const value = target.type === 'number' ? +target.value : target.value\n    setTerm({ ...term, [field]: value })\n  }\n\n  const getTodosDates = () => {\n    const todosDates = todos.map(todo => todo.createdAt)\n    setFilterDates([...new Set(todosDates)])\n  }\n\n  useEffect(() => {\n    dispatch(loadTodos())\n  }, [])\n\n  useEffect(() => {\n    filterTodos()\n  }, [term])\n\n\n  useEffect(() => {\n    filterTodos()\n    getTodosDates()\n  }, [todos])\n\n  return (\n    <div className=\"todo-app\">\n      <h1 className=\"logo-title\">Todo-List</h1>\n      <TodoEdit />\n      <TodoFilter dates={filterDates} searchStr={term.searchStr} handleChange={handleChange} />\n      <TodoList todos={todosToDisplay} />\n    </div>\n  )\n}\n","import './App.scss';\nimport { TodoApp } from './pages/TodoApp/TodoApp';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <TodoApp />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const INITIAL_STATE = {\r\n  todos: [],\r\n  todoToEdit: null\r\n}\r\n\r\nexport function todoReducer(state = INITIAL_STATE, action) {\r\n\r\n  switch (action.type) {\r\n    case 'SET_EDIT_TODO':\r\n      return {\r\n        ...state,\r\n        todoToEdit: action.todoToEdit ? action.todoToEdit : null\r\n      }\r\n    case 'SET_TODOS':\r\n      return {\r\n        ...state,\r\n        todos: action.todos\r\n      }\r\n    case 'ADD_TODO':\r\n      return {\r\n        ...state,\r\n        todos: [...state.todos, action.todo]\r\n      }\r\n    case 'REMOVE_TODO':\r\n      return {\r\n        ...state,\r\n        todos: state.todos.filter(todo => todo._id !== action.todoId)\r\n      }\r\n    case 'UPDATE_TODO':\r\n      const { updatedTodo } = action\r\n      return {\r\n        ...state,\r\n        todos: state.todos.map(todo => todo._id === updatedTodo._id ? updatedTodo : todo)\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from 'redux';\r\nimport thunk from 'redux-thunk'\r\nimport { todoReducer } from './reducers/todoReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\n\r\nconst rootReducer = combineReducers({\r\n  todoReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(\n  <React.StrictMode>\n     <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}